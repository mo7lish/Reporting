package com.example.reporting;

import android.Manifest;
import android.content.pm.PackageManager;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.Toast;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;
import java.io.IOException;
import java.util.List;

import android.content.ClipData;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;

import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Collectors;

public class ReportSubmissionActivity extends AppCompatActivity implements ImagePreviewAdapter.OnImageRemoveListener {
    private String getCurrentUsername() {
        // TODO: Implement actual user profile retrieval
        return "default_user";
    }

    private String getCurrentDate() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        return sdf.format(new Date());
    }

    private String getCurrentPhoneNumber() {
        // TODO: Implement actual phone number retrieval
        return "";
    }

    private void submitReport() {
        if (reportDetailsEditText == null || spinnerReportType == null) {
            Toast.makeText(this, "Error: Form not properly initialized", Toast.LENGTH_SHORT).show();
            return;
        }

        final String details = reportDetailsEditText.getText().toString().trim();
        if (details.isEmpty()) {
            Toast.makeText(this, "Please enter report details", Toast.LENGTH_SHORT).show();
            return;
        }
        
        loadingIndicator.setVisibility(View.VISIBLE);
        
        String reportId = generateReportId(selectedReportType);
        
        // Create new report with all required fields
        Report report = new Report(
            reportId,
            selectedReportType,
            details,
            "User Name", // TODO: Get from user profile
            getCurrentUsername(),
            getCurrentDate(),
            getCurrentPhoneNumber(),
            Constants.STATUS_PENDING
        );
        
        // Set location if available
        if (currentLocation != null) {
            report.setLocation(currentLocation);
        }
        if (currentAddress != null) {
            report.setAddress(currentAddress);
        }
        
        // Add media URLs if any
        for (Uri uri : selectedImageUris) {
            try {
                byte[] compressedImage = MediaUtils.compressImage(this, uri, MAX_IMAGE_SIZE);
                // TODO: Upload image to cloud storage and get URL
                String imageUrl = "https://example.com/images/" + uri.getLastPathSegment(); // Temporary placeholder
                report.addMediaUrl(imageUrl);
            } catch (IOException e) {
                Toast.makeText(this, "Error processing images", Toast.LENGTH_SHORT).show();
                loadingIndicator.setVisibility(View.GONE);
                return;
            }
        }
        
        // Save report and finish
        saveReport(report);
        loadingIndicator.setVisibility(View.GONE);
        finish();
    }
}